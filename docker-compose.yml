version: '3'

services:
  db:
    image: postgres
    restart: unless-stopped
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
  rabbitmq:
    restart: unless-stopped
    build:
      dockerfile: ./rabbitmq/Dockerfile
    tty: true
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5
  mailcatcher:
    restart: on-failure
    image: dockage/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"     
  django:
    build: .
    command: 
      - /bin/sh
      - -c
      - |
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST=db
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      db:
        condition: service_started
      mailcatcher:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  worker1:
    # profiles:
    #   - donotstart
    build: .
    command: python manage.py sync_worker
    volumes:
      - .:/code
    environment:
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST=db
      - POSTGRES_DB
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

volumes:
  pg_data: